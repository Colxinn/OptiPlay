generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://neondb_owner:npg_XVy3De2laJhn@ep-billowing-shadow-afxlj3vs-pooler.c-2.us-west-2.aws.neon.tech/neondb?sslmode=require&channel_binding=require"
}


model User {
  id        String   @id @default(cuid())
  name      String?
  email     String?  @unique
  image     String?
  isOwner   Boolean  @default(false)
  posts     Post[]
  comments  Comment[]
  votes     Vote[]
  createdAt DateTime @default(now())
}

model Post {
  id        String    @id @default(cuid())
  title     String
  content   String
  author    User?     @relation(fields: [authorId], references: [id])
  authorId  String?
  comments  Comment[]
  votes     Vote[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  String?
  post      Post?    @relation(fields: [postId], references: [id])
  postId    String?
  createdAt DateTime @default(now())
}

model Vote {
  id     String @id @default(cuid())
  value  Int
  user   User   @relation(fields: [userId], references: [id])
  userId String
  post   Post   @relation(fields: [postId], references: [id])
  postId String
  createdAt DateTime @default(now())
}
